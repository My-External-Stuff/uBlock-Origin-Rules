workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

variables:
  PIP_CACHE_DIR: '$CI_PROJECT_DIR/.cache/pip'
  GIT_STRATEGY: clone

# https://about.gitlab.com/blog/2022/09/12/a-visual-guide-to-gitlab-ci-caching/#local-cache-docker-volume
# We can use file names as keys as well https://docs.gitlab.com/ee/ci/yaml/index.html#cachekeyfiles
# default:
#   cache:
#     key: $CI_COMMIT_REF_NAME
#     key:
#       files:
#         - blockrules.txt
#         - noise.txt

cache:
  key: $CI_COMMIT_SHORT_SHA
  paths:
    - public/

run:
  stage: build
  image: node:latest
  script:
    - npm i -g @adguard/hostlist-compiler
    - hostlist-compiler -c tools/hostscompilerconf.json
      -o public/blockrules.txt
    - hostlist-compiler -c tools/noise.json -o public/noise.txt

pages:
  stage: deploy
  image: alpine:latest
  variables:
    GIT_STRATEGY: clone
  script:
    # - mv _public public
    - ls -lha public/
    - head -n 15 public/blockrules.txt
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
