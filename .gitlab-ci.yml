workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

variables:
  PIP_CACHE_DIR: '$CI_PROJECT_DIR/.cache/pip'
  GIT_STRATEGY: clone

default:
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - _public/

# before_script:
# - echo "Before script section"
# - echo ""
# - echo "Installing dependencies"
# - echo ""
# - export DEBIAN_FRONTEND=noninteractive
# - apt-get update
# - apt-get install -yqqf bash git pgp python3-pip python3.10 rsync npm
# - if [ -f requirements.txt ]; then python3.10 -m pip install --no-cache -I -r requirements.txt; fi
# - echo ""
# - echo "Setting Git Global variables"
# - git config --global user.email "${GITLAB_USER_EMAIL}"
# - git config --global user.name "${GITLAB_USER_LOGIN}"
# - git remote set-url origin https://spirillen:$CI_ACCESS_TOKEN@0xacab.org/$CI_PROJECT_PATH.git

# after_script:
#   - echo -e "After script section...\n"
#   - echo ""
#   - git status
#   - echo ""
#   - git add _public/blockrules.txt
#   - git commit -m "AdBlocker list updated. BuildID $CI_JOB_ID $CI_COMMIT_SHORT_SHA"
#   - git pull --rebase
#   - git push origin master "https://spirillen:${CI_ACCESS_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_REF_NAME}" -o skip-ci
#   - echo ""
#   - echo "Check Git status to make sure it is committed"
#   - echo ""
#   - git status
#   - echo ""

# run:
#   stage: build
#   image: ubuntu:latest
#   allow_failure: false
#   retry: 1
#   script:
#     - echo "Before script section"
#     - echo ""
#     - echo "Installing dependencies"
#     - echo ""
#     - export DEBIAN_FRONTEND=noninteractive
#     - apt-get update
#     - apt-get install -yqqf bash git pgp python3-pip python3.10 rsync npm
#     # - if [ -f requirements.txt ]; then python3.10 -m pip install --no-cache -I -r requirements.txt; fi
#     # - echo ""
#     # - echo "Setting Git Global variables"
#     # - git config --global user.email "${GITLAB_USER_EMAIL}"
#     # - git config --global user.name "${GITLAB_USER_LOGIN}"
#     # - git remote set-url origin https://spirillen:$CI_ACCESS_TOKEN@0xacab.org/$CI_PROJECT_PATH.git
#     - bash tools/hostlistcompiler.sh
#     - echo -e "After script section...\n"
#     # - echo ""
#     # - git status
#     # - echo ""
#     # - git add _public/blockrules.txt
#     # - git commit -m "AdBlocker list updated. BuildID $CI_JOB_ID $CI_COMMIT_SHORT_SHA"
#     # - git pull --rebase
#     # - git push origin master "https://spirillen:${CI_ACCESS_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_REF_NAME}" -o skip-ci
#     # - echo ""
#     # - echo "Check Git status to make sure it is committed"
#     # - echo ""
#     # - git status
#     - echo ""

run:
  stage: build
  image: node:latest
  script:
    - npm i -g @adguard/hostlist-compiler
    - npm audit fix --force
    - hostlist-compiler -c tools/hostscompilerconf.json \
      -o _public/blockrules.txt

pages:
  stage: deploy
  image: alpine:latest
  variables:
    GIT_STRATEGY: clone
  script:
    # - mkdir .public
    # - rsync -avP _public/* .public/
    # - rm -rf public
    - cp -R _public/* public/
    - ls -lha public/
    - head -n 15 public/blockrules.txt
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
