# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - pip install git+https://github.com/adblockplus/python-abp
  - virtualenv venv
  - source venv/bin/activate
  - git config --global user.email "git@gitlab.com"
  - git config --global user.name "Gitlab CI"

after_script:
  - echo "After script section"
  - git remote set-url origin https://git:$DEPLOY_KEY@gitlab.com/$CI_PROJECT_PATH.git
  #- git status
  - git add .
  - git status
  - git commit -m '[skip ci] commit from CI runner'
  - git push -u origin master

test:
  script:
    #- python setup.py test
    #- pip install tox flake8  # you can also use tox
    #- tox -e py36,flake8
    - flrender -i ublockorigin-rules=. AnonymousPoster.template blockrules.txt
    - bash -c "cat blockrules.txt"

#run:
  #script:
    #- python setup.py bdist_wheel
    # an alternative approach is to install and run:
    #- pip install dist/*
    # run the command here
  #artifacts:
    #paths:
      #- dist/*.whl

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc ; make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  only:
#    - master
